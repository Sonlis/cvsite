# Default values for react-portfolio.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: bastibast/webserver
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: cvsite


serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  port: 80
  annotations: 
    metallb.universe.tf/address-pool: default
  

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
   limits:
     cpu: 100m
     memory: 128Mi
   requests:
     cpu: 100m
     memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

hooks:
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded

workflow:
  metadata:
    namespace: webserver
    generateName: pre-cvsite-deploy
  spec:
    serviceAccountName: argo
    entrypoint: cicd
    volumes:
      name: docker-config
      secret: 
        secretName: regcred
    arguments:
      parameters:
        name: repo
        value: git@bitbucket.org:bouwe_ceunen/crypto-gathering-backend.git
        name: revision
        value: master
        name: image-name-backend
        value: docker-registry.k8s.bouweceunen.com/crypto-gathering/crypto-gathering-backend
    templates:
      name: cicd
      steps:
           name: checkout
           template: checkout
           name: build-push-docker
           template: build-push-docker
           arguments:
             artifacts:
               name: git-repo
               from: "{{steps.checkout.outputs.artifacts.source}}"
             parameters:
               name: image-tag
               value: "{{steps.checkout.outputs.parameters.tag}}"
           name: run-tests
           template: run-tests
           arguments:
             artifacts:
               name: git-repo
               from: "{{steps.checkout.outputs.artifacts.source}}"
             parameters:
               name: image-tag
               value: "{{steps.checkout.outputs.parameters.tag}}"
           name: deploy-kubernetes
           template: deploy-kubernetes
           arguments:
              artifacts:
               name: git-repo
               from: "{{steps.checkout.outputs.artifacts.source}}"
             parameters:
               name: image-tag
               value: "{{steps.checkout.outputs.parameters.tag}}"
